version: '3.8'

services:
  # MeiliSearch - Fast, typo-tolerant search engine
  meilisearch:
    image: getmeili/meilisearch:v1.5
    container_name: portfolio_meilisearch
    restart: unless-stopped
    ports:
      - "7700:7700"
    environment:
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY:-masterKey123456789}
      - MEILI_ENV=${MEILI_ENV:-development}
      - MEILI_NO_ANALYTICS=${MEILI_NO_ANALYTICS:-true}
      - MEILI_HTTP_ADDR=0.0.0.0:7700
      - MEILI_DB_PATH=/meili_data
      - MEILI_LOG_LEVEL=INFO
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - portfolio_network
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--spider", "http://localhost:7700/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Redis - Caching and session storage
  redis:
    image: redis:7-alpine
    container_name: portfolio_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: >
      redis-server --requirepass ${REDIS_PASSWORD:-your-redis-password} --maxmemory 256mb --maxmemory-policy allkeys-lru --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - portfolio_network
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
  # PostgreSQL - Production database (optional - for production use)
  # Uncomment if you want to use PostgreSQL instead of SQLite
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: portfolio_postgres
  #   restart: unless-stopped
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_DB:-portfolio_db}
  #     - POSTGRES_USER=${POSTGRES_USER:-portfolio_user}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres_password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - portfolio_network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-portfolio_user}"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

volumes:
  meilisearch_data:
    driver: local
  redis_data:
    driver: local
  # postgres_data:
  #   driver: local

networks:
  portfolio_network:
    driver: bridge
