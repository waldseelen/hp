{"version":3,"file":"language-manager.min.js","names":["LanguageManager","constructor","this","currentLanguage","getStoredLanguage","detectSystemLanguage","init","applyLanguage","bindEvents","updateToggleButtons","localStorage","getItem","browserLang","navigator","language","toLowerCase","startsWith","toggleLanguage","newLanguage","setLanguage","includes","setItem","setDjangoCookie","window","dispatchEvent","CustomEvent","detail","notifyDjangoLanguageChange","document","cookie","formData","FormData","append","location","pathname","csrfToken","querySelector","getAttribute","value","fetch","method","body","credentials","then","reload","catch","error","documentElement","lang","className","replace","updateMetaTags","updateJavaScriptStrings","langMeta","createElement","name","head","appendChild","content","updateAlternateLinks","querySelectorAll","forEach","link","remove","currentUrl","rel","hreflang","href","origin","defaultLink","translations","getTranslations","updateDynamicContent","tr","home","about","projects","blog","tools","contact","search","search_placeholder","loading","load_more","back_to_top","email","message","send","sending","sent","read_time","published","updated","success_message","error_message","network_error","en","element","key","textContent","input","placeholder","title","button","setAttribute","removeAttribute","updateButtonText","langLabels","hasAttribute","altLang","addEventListener","e","target","preventDefault","targetLang","altKey","newSystemLang","getCurrentLanguage","onLanguageChange","callback","languageManager","readyState","t","fallback","module","exports"],"sources":["0"],"sourcesContent":["/**\r\n * LANGUAGE MANAGER - Dil Değiştirme Sistemi\r\n * ==========================================\r\n * \r\n * Theme Manager'a benzer şekilde dil tercihlerini yönetir.\r\n * Kullanıcının dil seçimini localStorage'da saklar ve \r\n * sayfa yenilendiğinde korur.\r\n * \r\n * Özellikler:\r\n * - TR/EN toggle sistemi\r\n * - localStorage ile kalıcı saklama\r\n * - Sistem dili algılama\r\n * - Smooth geçişler\r\n * - Django i18n entegrasyonu\r\n */\r\n\r\nclass LanguageManager {\r\n    constructor() {\r\n        this.currentLanguage = this.getStoredLanguage() || this.detectSystemLanguage() || 'tr';\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.applyLanguage(this.currentLanguage);\r\n        this.bindEvents();\r\n        this.updateToggleButtons();\r\n        console.log('LanguageManager initialized with language:', this.currentLanguage);\r\n    }\r\n\r\n    /**\r\n     * Depolanan dil tercihini al\r\n     */\r\n    getStoredLanguage() {\r\n        return localStorage.getItem('portfolio-language');\r\n    }\r\n\r\n    /**\r\n     * Sistem dilini algıla\r\n     */\r\n    detectSystemLanguage() {\r\n        const browserLang = navigator.language.toLowerCase();\r\n        if (browserLang.startsWith('tr')) {\r\n            return 'tr';\r\n        } else if (browserLang.startsWith('en')) {\r\n            return 'en';\r\n        }\r\n        return 'tr'; // Varsayılan olarak Türkçe\r\n    }\r\n\r\n    /**\r\n     * Dili değiştir\r\n     */\r\n    toggleLanguage() {\r\n        const newLanguage = this.currentLanguage === 'tr' ? 'en' : 'tr';\r\n        this.setLanguage(newLanguage);\r\n    }\r\n\r\n    /**\r\n     * Belirli bir dil ayarla\r\n     */\r\n    setLanguage(language) {\r\n        if (!['tr', 'en'].includes(language)) {\r\n            console.warn('Unsupported language:', language);\r\n            return;\r\n        }\r\n\r\n        this.currentLanguage = language;\r\n        localStorage.setItem('portfolio-language', language);\r\n        this.applyLanguage(language);\r\n        this.updateToggleButtons();\r\n        \r\n        // Django i18n için cookie ayarla\r\n        this.setDjangoCookie(language);\r\n        \r\n        // Event dispatch et\r\n        window.dispatchEvent(new CustomEvent('languageChanged', {\r\n            detail: { language }\r\n        }));\r\n        \r\n        // Django'ya AJAX ile dil değişikliğini bildir\r\n        this.notifyDjangoLanguageChange(language);\r\n    }\r\n\r\n    /**\r\n     * Django'nun dil çerezini ayarla\r\n     */\r\n    setDjangoCookie(language) {\r\n        document.cookie = `django_language=${language}; path=/; max-age=31536000; SameSite=Lax`;\r\n    }\r\n\r\n    /**\r\n     * Django'ya AJAX ile dil değişikliğini bildir\r\n     */\r\n    notifyDjangoLanguageChange(language) {\r\n        // Django'nun set_language view'ini kullan\r\n        const formData = new FormData();\r\n        formData.append('language', language);\r\n        formData.append('next', window.location.pathname);\r\n        \r\n        // CSRF token'ı al\r\n        const csrfToken = document.querySelector('[name=csrf-token]')?.getAttribute('content') || \r\n                         document.querySelector('[name=csrfmiddlewaretoken]')?.value;\r\n        \r\n        if (csrfToken) {\r\n            formData.append('csrfmiddlewaretoken', csrfToken);\r\n        }\r\n        \r\n        // Sessizce POST et (sayfayı yenileme)\r\n        fetch('/i18n/setlang/', {\r\n            method: 'POST',\r\n            body: formData,\r\n            credentials: 'same-origin'\r\n        }).then(() => {\r\n            // Başarılı olursa sayfayı yenile\r\n            window.location.reload();\r\n        }).catch(error => {\r\n            console.warn('Language change notification failed:', error);\r\n            // Hata durumunda da sayfayı yenile\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Dili uygula\r\n     */\r\n    applyLanguage(language) {\r\n        // HTML lang attribute'unu güncelle\r\n        document.documentElement.lang = language;\r\n        \r\n        // Body'ye dil class'ı ekle\r\n        document.body.className = document.body.className\r\n            .replace(/\\blang-\\w+\\b/g, '') + ` lang-${language}`;\r\n        \r\n        // Meta tag'leri güncelle\r\n        this.updateMetaTags(language);\r\n        \r\n        // JavaScript string'leri güncelle\r\n        this.updateJavaScriptStrings(language);\r\n    }\r\n\r\n    /**\r\n     * Meta tag'leri güncelle\r\n     */\r\n    updateMetaTags(language) {\r\n        // Language meta tag\r\n        let langMeta = document.querySelector('meta[name=\"language\"]');\r\n        if (!langMeta) {\r\n            langMeta = document.createElement('meta');\r\n            langMeta.name = 'language';\r\n            document.head.appendChild(langMeta);\r\n        }\r\n        langMeta.content = language;\r\n\r\n        // Alternate language links güncelle\r\n        this.updateAlternateLinks(language);\r\n    }\r\n\r\n    /**\r\n     * Alternate language link'leri güncelle\r\n     */\r\n    updateAlternateLinks(language) {\r\n        // Mevcut alternate link'leri kaldır\r\n        document.querySelectorAll('link[rel=\"alternate\"][hreflang]').forEach(link => {\r\n            link.remove();\r\n        });\r\n\r\n        // Yeni alternate link'leri ekle\r\n        const currentUrl = window.location.pathname;\r\n        const languages = ['tr', 'en'];\r\n        \r\n        languages.forEach(lang => {\r\n            const link = document.createElement('link');\r\n            link.rel = 'alternate';\r\n            link.hreflang = lang;\r\n            link.href = `${window.location.origin}${currentUrl}?lang=${lang}`;\r\n            document.head.appendChild(link);\r\n        });\r\n\r\n        // x-default için de bir tane ekle\r\n        const defaultLink = document.createElement('link');\r\n        defaultLink.rel = 'alternate';\r\n        defaultLink.hreflang = 'x-default';\r\n        defaultLink.href = `${window.location.origin}${currentUrl}`;\r\n        document.head.appendChild(defaultLink);\r\n    }\r\n\r\n    /**\r\n     * JavaScript string'leri güncelle\r\n     */\r\n    updateJavaScriptStrings(language) {\r\n        // Global translations objesi oluştur\r\n        window.translations = this.getTranslations(language);\r\n        \r\n        // Dinamik içerikleri güncelle\r\n        this.updateDynamicContent(language);\r\n    }\r\n\r\n    /**\r\n     * Çeviri objesi döndür\r\n     */\r\n    getTranslations(language) {\r\n        const translations = {\r\n            tr: {\r\n                // Navigation\r\n                'home': 'Ana Sayfa',\r\n                'about': 'Hakkımda',\r\n                'projects': 'Projeler',\r\n                'blog': 'Blog',\r\n                'tools': 'Araçlar',\r\n                'contact': 'İletişim',\r\n                \r\n                // UI Elements\r\n                'search': 'Ara',\r\n                'search_placeholder': 'Blog, proje veya içerik ara...',\r\n                'loading': 'Yükleniyor...',\r\n                'load_more': 'Daha Fazla Yükle',\r\n                'back_to_top': 'Başa Dön',\r\n                \r\n                // Forms\r\n                'name': 'İsim',\r\n                'email': 'E-posta',\r\n                'message': 'Mesaj',\r\n                'send': 'Gönder',\r\n                'sending': 'Gönderiliyor...',\r\n                'sent': 'Gönderildi',\r\n                'error': 'Hata',\r\n                \r\n                // Time & Dates\r\n                'read_time': 'dakika okuma',\r\n                'published': 'Yayınlandı',\r\n                'updated': 'Güncellendi',\r\n                \r\n                // Messages\r\n                'success_message': 'İşlem başarıyla tamamlandı',\r\n                'error_message': 'Bir hata oluştu',\r\n                'network_error': 'Bağlantı hatası',\r\n            },\r\n            en: {\r\n                // Navigation\r\n                'home': 'Home',\r\n                'about': 'About',\r\n                'projects': 'Projects',\r\n                'blog': 'Blog',\r\n                'tools': 'Tools',\r\n                'contact': 'Contact',\r\n                \r\n                // UI Elements\r\n                'search': 'Search',\r\n                'search_placeholder': 'Search blog, projects or content...',\r\n                'loading': 'Loading...',\r\n                'load_more': 'Load More',\r\n                'back_to_top': 'Back to Top',\r\n                \r\n                // Forms\r\n                'name': 'Name',\r\n                'email': 'Email',\r\n                'message': 'Message',\r\n                'send': 'Send',\r\n                'sending': 'Sending...',\r\n                'sent': 'Sent',\r\n                'error': 'Error',\r\n                \r\n                // Time & Dates\r\n                'read_time': 'min read',\r\n                'published': 'Published',\r\n                'updated': 'Updated',\r\n                \r\n                // Messages\r\n                'success_message': 'Operation completed successfully',\r\n                'error_message': 'An error occurred',\r\n                'network_error': 'Network error',\r\n            }\r\n        };\r\n        \r\n        return translations[language] || translations.tr;\r\n    }\r\n\r\n    /**\r\n     * Dinamik içerikleri güncelle\r\n     */\r\n    updateDynamicContent(language) {\r\n        // JavaScript tarafından oluşturulan içerikleri güncelle\r\n        const elementsToUpdate = document.querySelectorAll('[data-translate]');\r\n        elementsToUpdate.forEach(element => {\r\n            const key = element.getAttribute('data-translate');\r\n            if (window.translations[key]) {\r\n                element.textContent = window.translations[key];\r\n            }\r\n        });\r\n\r\n        // Placeholder'ları güncelle\r\n        const inputsToUpdate = document.querySelectorAll('[data-translate-placeholder]');\r\n        inputsToUpdate.forEach(input => {\r\n            const key = input.getAttribute('data-translate-placeholder');\r\n            if (window.translations[key]) {\r\n                input.placeholder = window.translations[key];\r\n            }\r\n        });\r\n\r\n        // Title attribute'larını güncelle\r\n        const titlesToUpdate = document.querySelectorAll('[data-translate-title]');\r\n        titlesToUpdate.forEach(element => {\r\n            const key = element.getAttribute('data-translate-title');\r\n            if (window.translations[key]) {\r\n                element.title = window.translations[key];\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle butonlarını güncelle\r\n     */\r\n    updateToggleButtons() {\r\n        const toggleButtons = document.querySelectorAll('[data-language-switch]');\r\n        toggleButtons.forEach(button => {\r\n            // Aktif dil butonunu işaretle\r\n            const buttonLang = button.getAttribute('data-language-switch');\r\n            if (buttonLang === this.currentLanguage) {\r\n                // Aktif button stilleri\r\n                button.className = 'px-2 py-1 text-xs font-medium rounded transition-colors duration-200 bg-primary-600 text-white';\r\n                button.setAttribute('aria-pressed', 'true');\r\n                // Alpine.js x-bind:class'ını kaldır\r\n                button.removeAttribute('x-bind:class');\r\n            } else {\r\n                // İnaktif button stilleri - Alpine.js kullan\r\n                button.className = 'px-2 py-1 text-xs font-medium rounded transition-colors duration-200';\r\n                button.setAttribute('x-bind:class', \"{ 'text-gray-300 hover:text-white hover:bg-gray-700': darkMode, 'text-gray-600 hover:text-gray-900 hover:bg-gray-300': !darkMode }\");\r\n                button.setAttribute('aria-pressed', 'false');\r\n            }\r\n            \r\n            // Button text'ini güncelle\r\n            this.updateButtonText(button);\r\n        });\r\n\r\n        // Generic toggle button'ları güncelle\r\n        const genericToggleButtons = document.querySelectorAll('[data-toggle=\"language\"]');\r\n        genericToggleButtons.forEach(button => {\r\n            this.updateButtonText(button);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Button text'ini güncelle\r\n     */\r\n    updateButtonText(button) {\r\n        const langLabels = {\r\n            tr: 'TR',\r\n            en: 'EN'\r\n        };\r\n        \r\n        // Eğer button sadece dil kodu gösteriyorsa\r\n        if (button.hasAttribute('data-show-current')) {\r\n            button.textContent = langLabels[this.currentLanguage];\r\n        }\r\n        \r\n        // Eğer button alternatif dili gösteriyorsa\r\n        if (button.hasAttribute('data-show-alternative')) {\r\n            const altLang = this.currentLanguage === 'tr' ? 'en' : 'tr';\r\n            button.textContent = langLabels[altLang];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event listener'ları bağla\r\n     */\r\n    bindEvents() {\r\n        // Dil toggle butonları\r\n        document.addEventListener('click', (e) => {\r\n            // Spesifik dil butonları\r\n            if (e.target.hasAttribute('data-language-switch')) {\r\n                e.preventDefault();\r\n                const targetLang = e.target.getAttribute('data-language-switch');\r\n                this.setLanguage(targetLang);\r\n            }\r\n            \r\n            // Generic toggle butonları\r\n            if (e.target.hasAttribute('data-toggle') && e.target.getAttribute('data-toggle') === 'language') {\r\n                e.preventDefault();\r\n                this.toggleLanguage();\r\n            }\r\n        });\r\n\r\n        // Klavye kısayolları (Alt+L)\r\n        document.addEventListener('keydown', (e) => {\r\n            if (e.altKey && e.key.toLowerCase() === 'l') {\r\n                e.preventDefault();\r\n                this.toggleLanguage();\r\n            }\r\n        });\r\n\r\n        // System language change detection\r\n        window.addEventListener('languagechange', () => {\r\n            if (!this.getStoredLanguage()) {\r\n                const newSystemLang = this.detectSystemLanguage();\r\n                if (newSystemLang !== this.currentLanguage) {\r\n                    this.setLanguage(newSystemLang);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Mevcut dili döndür\r\n     */\r\n    getCurrentLanguage() {\r\n        return this.currentLanguage;\r\n    }\r\n\r\n    /**\r\n     * Dil değişiklik callback'i ekle\r\n     */\r\n    onLanguageChange(callback) {\r\n        window.addEventListener('languageChanged', (e) => {\r\n            callback(e.detail.language);\r\n        });\r\n    }\r\n}\r\n\r\n// Auto-initialize\r\nlet languageManager;\r\nif (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n        languageManager = new LanguageManager();\r\n        window.languageManager = languageManager;\r\n    });\r\n} else {\r\n    languageManager = new LanguageManager();\r\n    window.languageManager = languageManager;\r\n}\r\n\r\n// Utility function for translations\r\nwindow.t = function(key, fallback = key) {\r\n    return (window.translations && window.translations[key]) || fallback;\r\n};\r\n\r\n// Export for module systems\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = LanguageManager;\r\n}"],"mappings":"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","ignoreList":[]}