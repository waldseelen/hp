{"version":3,"file":"accessibility.min.js","names":["AccessibilityManager","constructor","this","focusStack","liveRegions","Map","keyboardListeners","contrastRatio","normal","large","motionPreference","window","matchMedia","contrastPreference","preferences","loadPreferences","init","setupLiveRegions","setupKeyboardNavigation","setupFocusManagement","setupMotionPreferences","setupContrastMonitoring","setupTextScaling","setupScreenReaderSupport","monitorAccessibilityViolations","addAccessibilityControls","announcer","document","createElement","setAttribute","className","id","body","appendChild","set","urgentAnnouncer","statusRegion","announce","message","priority","region","get","textContent","setTimeout","updateStatus","addEventListener","e","handleGlobalKeyboard","createSkipLinks","setupRovingTabindex","setupModalKeyboardHandling","skipLinks","innerHTML","insertBefore","firstChild","querySelectorAll","forEach","container","initializeRovingTabindex","items","length","tabIndex","i","currentIndex","Array","from","indexOf","target","nextIndex","key","preventDefault","focus","altKey","main","getElementById","querySelector","gettext","nav","toLowerCase","search","closeActiveModals","modal","trapFocus","lastFocusedElement","enhanceFocusVisibility","setupAutoFocus","focusableElements","firstElement","lastElement","shiftKey","activeElement","pushFocus","element","push","popFocus","pop","contains","style","head","MutationObserver","mutations","mutation","addedNodes","node","nodeType","Node","ELEMENT_NODE","firstInput","getAttribute","observe","childList","subtree","updateMotionPreferences","matches","classList","add","remove","updateContrastPreferences","auditContrast","elements","violations","styles","getComputedStyle","bgColor","backgroundColor","color","ratio","calculateContrastRatio","fontSize","parseFloat","fontWeight","requiredRatio","parseInt","toFixed","required","colors","foreground","background","showContrastWarnings","violation","getLuminance","rgb","match","r","g","b","map","val","normalized","Math","pow","l1","l2","max","min","textScale","applyTextScaling","detectZoomChange","documentElement","setProperty","changeTextScale","scale","savePreferences","round","currentZoom","devicePixelRatio","lastZoom","addAriaLabels","enhanceFormLabels","addLandmarkRoles","improveTableAccessibility","label","trim","input","generateId","checkValidity","removeAttribute","selector","role","landmark","table","caption","header","isRowHeader","parentElement","controlsPanel","cssText","highContrast","reduceMotion","focusEnhancement","setupControlsEventListeners","setupAccessibilityShortcuts","toggleAccessibilityPanel","display","closeBtn","textScaleRange","textScaleValue","highContrastToggle","reduceMotionToggle","focusEnhancementToggle","value","checked","toggle","showViolationWarnings","checkImages","checkFormLabels","checkHeadingHierarchy","checkColorOnlyInformation","images","img","inputs","type","headings","lastLevel","heading","currentLevel","tagName","substring","issue","prefix","random","toString","substr","click","saved","localStorage","getItem","JSON","parse","setItem","stringify","enable","disable","getViolations","forms","contrast","accessibilityManager","readyState"],"sources":["0"],"sourcesContent":["/**\r\n * Accessibility Enhancement Module\r\n * Provides comprehensive accessibility features and WCAG 2.1 AA compliance monitoring\r\n * Features:\r\n * - Screen reader support and announcements\r\n * - Keyboard navigation management\r\n * - Focus management and trap\r\n * - Color contrast monitoring\r\n * - Text scaling and readability\r\n * - Motion and animation preferences\r\n * - Accessibility violation detection\r\n * - ARIA live regions management\r\n */\r\n\r\nclass AccessibilityManager {\r\n    constructor() {\r\n        this.focusStack = [];\r\n        this.liveRegions = new Map();\r\n        this.keyboardListeners = new Map();\r\n        this.contrastRatio = { normal: 4.5, large: 3.0 };\r\n        this.motionPreference = window.matchMedia('(prefers-reduced-motion: reduce)');\r\n        this.contrastPreference = window.matchMedia('(prefers-contrast: high)');\r\n        this.preferences = this.loadPreferences();\r\n        \r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.setupLiveRegions();\r\n        this.setupKeyboardNavigation();\r\n        this.setupFocusManagement();\r\n        this.setupMotionPreferences();\r\n        this.setupContrastMonitoring();\r\n        this.setupTextScaling();\r\n        this.setupScreenReaderSupport();\r\n        this.monitorAccessibilityViolations();\r\n        this.addAccessibilityControls();\r\n    }\r\n\r\n    // Live Regions Management\r\n    setupLiveRegions() {\r\n        // Create main announcement region\r\n        const announcer = document.createElement('div');\r\n        announcer.setAttribute('aria-live', 'polite');\r\n        announcer.setAttribute('aria-atomic', 'true');\r\n        announcer.className = 'sr-only';\r\n        announcer.id = 'accessibility-announcer';\r\n        document.body.appendChild(announcer);\r\n        this.liveRegions.set('announcer', announcer);\r\n\r\n        // Create urgent announcement region\r\n        const urgentAnnouncer = document.createElement('div');\r\n        urgentAnnouncer.setAttribute('aria-live', 'assertive');\r\n        urgentAnnouncer.setAttribute('aria-atomic', 'true');\r\n        urgentAnnouncer.className = 'sr-only';\r\n        urgentAnnouncer.id = 'accessibility-urgent-announcer';\r\n        document.body.appendChild(urgentAnnouncer);\r\n        this.liveRegions.set('urgent', urgentAnnouncer);\r\n\r\n        // Create status region\r\n        const statusRegion = document.createElement('div');\r\n        statusRegion.setAttribute('aria-live', 'polite');\r\n        statusRegion.setAttribute('aria-atomic', 'false');\r\n        statusRegion.className = 'sr-only';\r\n        statusRegion.id = 'accessibility-status';\r\n        document.body.appendChild(statusRegion);\r\n        this.liveRegions.set('status', statusRegion);\r\n    }\r\n\r\n    announce(message, priority = 'polite') {\r\n        const region = priority === 'assertive' ? \r\n            this.liveRegions.get('urgent') : \r\n            this.liveRegions.get('announcer');\r\n        \r\n        if (region) {\r\n            // Clear previous message\r\n            region.textContent = '';\r\n            \r\n            // Add new message after a brief delay to ensure screen readers pick it up\r\n            setTimeout(() => {\r\n                region.textContent = message;\r\n            }, 10);\r\n            \r\n            // Clear message after 5 seconds\r\n            setTimeout(() => {\r\n                if (region.textContent === message) {\r\n                    region.textContent = '';\r\n                }\r\n            }, 5000);\r\n        }\r\n    }\r\n\r\n    updateStatus(message) {\r\n        const statusRegion = this.liveRegions.get('status');\r\n        if (statusRegion) {\r\n            statusRegion.textContent = message;\r\n        }\r\n    }\r\n\r\n    // Keyboard Navigation\r\n    setupKeyboardNavigation() {\r\n        // Global keyboard shortcuts\r\n        document.addEventListener('keydown', (e) => {\r\n            this.handleGlobalKeyboard(e);\r\n        });\r\n\r\n        // Skip links\r\n        this.createSkipLinks();\r\n        \r\n        // Roving tabindex for complex widgets\r\n        this.setupRovingTabindex();\r\n        \r\n        // Modal and dropdown keyboard handling\r\n        this.setupModalKeyboardHandling();\r\n    }\r\n\r\n    createSkipLinks() {\r\n        const skipLinks = document.createElement('div');\r\n        skipLinks.className = 'skip-links';\r\n        skipLinks.innerHTML = `\r\n            <a href=\"#main-content\" class=\"skip-link\">Skip to main content</a>\r\n            <a href=\"#navigation\" class=\"skip-link\">Skip to navigation</a>\r\n            <a href=\"#search\" class=\"skip-link\">Skip to search</a>\r\n        `;\r\n        document.body.insertBefore(skipLinks, document.body.firstChild);\r\n    }\r\n\r\n    setupRovingTabindex() {\r\n        // Find all roving tabindex containers\r\n        const containers = document.querySelectorAll('[role=\"tablist\"], [role=\"menubar\"], [role=\"toolbar\"]');\r\n        \r\n        containers.forEach(container => {\r\n            this.initializeRovingTabindex(container);\r\n        });\r\n    }\r\n\r\n    initializeRovingTabindex(container) {\r\n        const items = container.querySelectorAll('[role=\"tab\"], [role=\"menuitem\"], [role=\"button\"]');\r\n        if (items.length === 0) return;\r\n\r\n        // Set initial focus\r\n        items[0].tabIndex = 0;\r\n        for (let i = 1; i < items.length; i++) {\r\n            items[i].tabIndex = -1;\r\n        }\r\n\r\n        container.addEventListener('keydown', (e) => {\r\n            const currentIndex = Array.from(items).indexOf(e.target);\r\n            let nextIndex = currentIndex;\r\n\r\n            switch (e.key) {\r\n                case 'ArrowRight':\r\n                case 'ArrowDown':\r\n                    e.preventDefault();\r\n                    nextIndex = (currentIndex + 1) % items.length;\r\n                    break;\r\n                case 'ArrowLeft':\r\n                case 'ArrowUp':\r\n                    e.preventDefault();\r\n                    nextIndex = currentIndex > 0 ? currentIndex - 1 : items.length - 1;\r\n                    break;\r\n                case 'Home':\r\n                    e.preventDefault();\r\n                    nextIndex = 0;\r\n                    break;\r\n                case 'End':\r\n                    e.preventDefault();\r\n                    nextIndex = items.length - 1;\r\n                    break;\r\n            }\r\n\r\n            if (nextIndex !== currentIndex) {\r\n                items[currentIndex].tabIndex = -1;\r\n                items[nextIndex].tabIndex = 0;\r\n                items[nextIndex].focus();\r\n            }\r\n        });\r\n    }\r\n\r\n    handleGlobalKeyboard(e) {\r\n        // Alt + 1: Go to main content\r\n        if (e.altKey && e.key === '1') {\r\n            e.preventDefault();\r\n            const main = document.getElementById('main-content') || document.querySelector('main');\r\n            if (main) {\r\n                main.focus();\r\n                this.announce(gettext('Jumped to main content'));\r\n            }\r\n        }\r\n\r\n        // Alt + 2: Go to navigation\r\n        if (e.altKey && e.key === '2') {\r\n            e.preventDefault();\r\n            const nav = document.getElementById('navigation') || document.querySelector('nav');\r\n            if (nav) {\r\n                nav.focus();\r\n                this.announce(gettext('Jumped to navigation'));\r\n            }\r\n        }\r\n\r\n        // Alt + S: Go to search\r\n        if (e.altKey && e.key.toLowerCase() === 's') {\r\n            e.preventDefault();\r\n            const search = document.getElementById('search') || document.querySelector('[role=\"search\"] input');\r\n            if (search) {\r\n                search.focus();\r\n                this.announce(gettext('Jumped to search'));\r\n            }\r\n        }\r\n\r\n        // Escape: Close modals/dropdowns\r\n        if (e.key === 'Escape') {\r\n            this.closeActiveModals();\r\n        }\r\n    }\r\n\r\n    setupModalKeyboardHandling() {\r\n        document.addEventListener('keydown', (e) => {\r\n            if (e.key === 'Tab') {\r\n                const modal = document.querySelector('[role=\"dialog\"]:not([aria-hidden=\"true\"])');\r\n                if (modal) {\r\n                    this.trapFocus(e, modal);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // Focus Management\r\n    setupFocusManagement() {\r\n        // Track focus for restoration\r\n        document.addEventListener('focusin', (e) => {\r\n            this.lastFocusedElement = e.target;\r\n        });\r\n\r\n        // Enhance focus visibility\r\n        this.enhanceFocusVisibility();\r\n        \r\n        // Auto-focus management for dynamic content\r\n        this.setupAutoFocus();\r\n    }\r\n\r\n    trapFocus(e, container) {\r\n        const focusableElements = container.querySelectorAll(\r\n            'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\r\n        );\r\n        \r\n        const firstElement = focusableElements[0];\r\n        const lastElement = focusableElements[focusableElements.length - 1];\r\n\r\n        if (e.shiftKey) {\r\n            if (document.activeElement === firstElement) {\r\n                e.preventDefault();\r\n                lastElement.focus();\r\n            }\r\n        } else {\r\n            if (document.activeElement === lastElement) {\r\n                e.preventDefault();\r\n                firstElement.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    pushFocus(element) {\r\n        if (this.lastFocusedElement) {\r\n            this.focusStack.push(this.lastFocusedElement);\r\n        }\r\n        if (element) {\r\n            element.focus();\r\n        }\r\n    }\r\n\r\n    popFocus() {\r\n        const element = this.focusStack.pop();\r\n        if (element && document.contains(element)) {\r\n            element.focus();\r\n        }\r\n    }\r\n\r\n    enhanceFocusVisibility() {\r\n        // Add enhanced focus styles for better visibility\r\n        const style = document.createElement('style');\r\n        style.textContent = `\r\n            .a11y-focus-enhanced *:focus {\r\n                outline: 3px solid #4A90E2 !important;\r\n                outline-offset: 2px !important;\r\n                box-shadow: 0 0 0 1px #ffffff !important;\r\n            }\r\n            \r\n            .a11y-high-contrast *:focus {\r\n                outline: 4px solid #FFFF00 !important;\r\n                outline-offset: 2px !important;\r\n                background-color: #000000 !important;\r\n                color: #FFFFFF !important;\r\n            }\r\n        `;\r\n        document.head.appendChild(style);\r\n    }\r\n\r\n    setupAutoFocus() {\r\n        // Auto-focus first form element in new content\r\n        const observer = new MutationObserver((mutations) => {\r\n            mutations.forEach((mutation) => {\r\n                mutation.addedNodes.forEach((node) => {\r\n                    if (node.nodeType === Node.ELEMENT_NODE) {\r\n                        const firstInput = node.querySelector('input, select, textarea, button');\r\n                        if (firstInput && node.getAttribute('data-auto-focus') === 'true') {\r\n                            setTimeout(() => firstInput.focus(), 100);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        observer.observe(document.body, { childList: true, subtree: true });\r\n    }\r\n\r\n    // Motion Preferences\r\n    setupMotionPreferences() {\r\n        this.motionPreference.addEventListener('change', () => {\r\n            this.updateMotionPreferences();\r\n        });\r\n        \r\n        this.updateMotionPreferences();\r\n    }\r\n\r\n    updateMotionPreferences() {\r\n        if (this.motionPreference.matches) {\r\n            document.body.classList.add('reduce-motion');\r\n            this.announce(gettext('Reduced motion enabled'));\r\n        } else {\r\n            document.body.classList.remove('reduce-motion');\r\n        }\r\n    }\r\n\r\n    // Contrast Monitoring\r\n    setupContrastMonitoring() {\r\n        this.contrastPreference.addEventListener('change', () => {\r\n            this.updateContrastPreferences();\r\n        });\r\n        \r\n        this.updateContrastPreferences();\r\n        this.auditContrast();\r\n    }\r\n\r\n    updateContrastPreferences() {\r\n        if (this.contrastPreference.matches) {\r\n            document.body.classList.add('high-contrast');\r\n            this.announce(gettext('High contrast mode enabled'));\r\n        } else {\r\n            document.body.classList.remove('high-contrast');\r\n        }\r\n    }\r\n\r\n    auditContrast() {\r\n        // Simple contrast ratio calculation\r\n        const elements = document.querySelectorAll('*');\r\n        const violations = [];\r\n\r\n        elements.forEach((element) => {\r\n            const styles = window.getComputedStyle(element);\r\n            const bgColor = styles.backgroundColor;\r\n            const color = styles.color;\r\n            \r\n            if (bgColor !== 'rgba(0, 0, 0, 0)' && color !== 'rgba(0, 0, 0, 0)') {\r\n                const ratio = this.calculateContrastRatio(color, bgColor);\r\n                const fontSize = parseFloat(styles.fontSize);\r\n                const fontWeight = styles.fontWeight;\r\n                \r\n                const isLargeText = fontSize >= 18 || (fontSize >= 14 && (fontWeight === 'bold' || parseInt(fontWeight) >= 700));\r\n                const requiredRatio = isLargeText ? this.contrastRatio.large : this.contrastRatio.normal;\r\n                \r\n                if (ratio < requiredRatio) {\r\n                    violations.push({\r\n                        element,\r\n                        ratio: ratio.toFixed(2),\r\n                        required: requiredRatio,\r\n                        colors: { foreground: color, background: bgColor }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        if (violations.length > 0 && this.preferences.showContrastWarnings) {\r\n            console.group('Accessibility: Contrast Violations');\r\n            violations.forEach(violation => {\r\n                console.warn('Contrast ratio too low:', violation);\r\n            });\r\n            console.groupEnd();\r\n        }\r\n    }\r\n\r\n    calculateContrastRatio(foreground, background) {\r\n        // Simplified contrast calculation\r\n        // In a real implementation, you'd want a more robust color parsing library\r\n        const getLuminance = (color) => {\r\n            // This is a simplified version\r\n            const rgb = color.match(/\\d+/g);\r\n            if (!rgb) return 0;\r\n            \r\n            const [r, g, b] = rgb.map(val => {\r\n                const normalized = parseInt(val) / 255;\r\n                return normalized <= 0.03928 ? \r\n                    normalized / 12.92 : \r\n                    Math.pow((normalized + 0.055) / 1.055, 2.4);\r\n            });\r\n            \r\n            return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n        };\r\n\r\n        const l1 = getLuminance(foreground);\r\n        const l2 = getLuminance(background);\r\n        \r\n        return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\r\n    }\r\n\r\n    // Text Scaling\r\n    setupTextScaling() {\r\n        this.textScale = this.preferences.textScale || 1;\r\n        this.applyTextScaling();\r\n        \r\n        // Listen for browser zoom changes\r\n        window.addEventListener('resize', () => {\r\n            this.detectZoomChange();\r\n        });\r\n    }\r\n\r\n    applyTextScaling() {\r\n        document.documentElement.style.setProperty('--text-scale', this.textScale);\r\n        document.body.style.fontSize = `${this.textScale}rem`;\r\n    }\r\n\r\n    changeTextScale(scale) {\r\n        this.textScale = Math.max(0.8, Math.min(2, scale));\r\n        this.applyTextScaling();\r\n        this.savePreferences();\r\n        this.announce(`Text size changed to ${Math.round(this.textScale * 100)}%`);\r\n    }\r\n\r\n    detectZoomChange() {\r\n        const currentZoom = Math.round(window.devicePixelRatio * 100);\r\n        if (currentZoom !== this.lastZoom) {\r\n            this.lastZoom = currentZoom;\r\n            if (currentZoom > 150) {\r\n                this.announce(`Browser zoom is at ${currentZoom}%. Consider using our built-in text scaling for better accessibility.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Screen Reader Support\r\n    setupScreenReaderSupport() {\r\n        this.addAriaLabels();\r\n        this.enhanceFormLabels();\r\n        this.addLandmarkRoles();\r\n        this.improveTableAccessibility();\r\n    }\r\n\r\n    addAriaLabels() {\r\n        // Add missing aria-labels to interactive elements\r\n        const interactiveElements = document.querySelectorAll('button, a, input, select, textarea');\r\n        \r\n        interactiveElements.forEach(element => {\r\n            if (!element.getAttribute('aria-label') && !element.getAttribute('aria-labelledby')) {\r\n                let label = '';\r\n                \r\n                if (element.textContent.trim()) {\r\n                    label = element.textContent.trim();\r\n                } else if (element.getAttribute('title')) {\r\n                    label = element.getAttribute('title');\r\n                } else if (element.getAttribute('placeholder')) {\r\n                    label = element.getAttribute('placeholder');\r\n                }\r\n                \r\n                if (label) {\r\n                    element.setAttribute('aria-label', label);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    enhanceFormLabels() {\r\n        const inputs = document.querySelectorAll('input, select, textarea');\r\n        \r\n        inputs.forEach(input => {\r\n            if (!input.getAttribute('aria-labelledby') && !input.getAttribute('aria-label')) {\r\n                const label = document.querySelector(`label[for=\"${input.id}\"]`);\r\n                if (label) {\r\n                    input.setAttribute('aria-labelledby', label.id || this.generateId('label'));\r\n                    if (!label.id) {\r\n                        label.id = input.getAttribute('aria-labelledby');\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // Add required indicators\r\n            if (input.required && !input.getAttribute('aria-required')) {\r\n                input.setAttribute('aria-required', 'true');\r\n            }\r\n            \r\n            // Add invalid state\r\n            input.addEventListener('invalid', () => {\r\n                input.setAttribute('aria-invalid', 'true');\r\n            });\r\n            \r\n            input.addEventListener('input', () => {\r\n                if (input.checkValidity()) {\r\n                    input.removeAttribute('aria-invalid');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    addLandmarkRoles() {\r\n        // Add landmark roles to semantic elements\r\n        const landmarks = [\r\n            { selector: 'header', role: 'banner' },\r\n            { selector: 'nav', role: 'navigation' },\r\n            { selector: 'main', role: 'main' },\r\n            { selector: 'aside', role: 'complementary' },\r\n            { selector: 'footer', role: 'contentinfo' }\r\n        ];\r\n        \r\n        landmarks.forEach(landmark => {\r\n            const elements = document.querySelectorAll(landmark.selector);\r\n            elements.forEach(element => {\r\n                if (!element.getAttribute('role')) {\r\n                    element.setAttribute('role', landmark.role);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    improveTableAccessibility() {\r\n        const tables = document.querySelectorAll('table');\r\n        \r\n        tables.forEach(table => {\r\n            // Add table caption if missing\r\n            if (!table.querySelector('caption') && !table.getAttribute('aria-label')) {\r\n                const caption = document.createElement('caption');\r\n                caption.textContent = 'Data table';\r\n                caption.className = 'sr-only';\r\n                table.insertBefore(caption, table.firstChild);\r\n            }\r\n            \r\n            // Add scope to headers\r\n            const headers = table.querySelectorAll('th');\r\n            headers.forEach(header => {\r\n                if (!header.getAttribute('scope')) {\r\n                    const isRowHeader = header.parentElement.querySelector('th') === header;\r\n                    header.setAttribute('scope', isRowHeader ? 'row' : 'col');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Accessibility Controls - Gizli tuş kombinasyonu ile açılır\r\n    addAccessibilityControls() {\r\n        const controlsPanel = document.createElement('div');\r\n        controlsPanel.className = 'accessibility-controls hidden';\r\n        controlsPanel.setAttribute('role', 'region');\r\n        controlsPanel.setAttribute('aria-label', 'Accessibility controls');\r\n        controlsPanel.style.cssText = `\r\n            position: fixed;\r\n            top: 20px;\r\n            right: 20px;\r\n            z-index: 9999;\r\n            background: rgba(0, 0, 0, 0.9);\r\n            color: white;\r\n            padding: 15px;\r\n            border-radius: 8px;\r\n            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\r\n            min-width: 250px;\r\n            display: none;\r\n        `;\r\n        \r\n        controlsPanel.innerHTML = `\r\n            <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;\">\r\n                <h3 style=\"margin: 0; font-size: 14px;\">Accessibility Options</h3>\r\n                <button id=\"a11y-close\" style=\"background: none; border: none; color: white; font-size: 16px; cursor: pointer;\">&times;</button>\r\n            </div>\r\n            <div class=\"a11y-option\" style=\"margin-bottom: 10px;\">\r\n                <label for=\"text-scale-range\" style=\"font-size: 12px; display: block; margin-bottom: 5px;\">Text Size:</label>\r\n                <input type=\"range\" id=\"text-scale-range\" min=\"0.8\" max=\"2\" step=\"0.1\" value=\"${this.textScale}\" style=\"width: 100%;\">\r\n                <span id=\"text-scale-value\" style=\"font-size: 11px;\">${Math.round(this.textScale * 100)}%</span>\r\n            </div>\r\n            <div class=\"a11y-option\" style=\"margin-bottom: 8px;\">\r\n                <label style=\"font-size: 12px; display: flex; align-items: center;\">\r\n                    <input type=\"checkbox\" id=\"high-contrast-toggle\" ${this.preferences.highContrast ? 'checked' : ''} style=\"margin-right: 8px;\">\r\n                    High Contrast\r\n                </label>\r\n            </div>\r\n            <div class=\"a11y-option\" style=\"margin-bottom: 8px;\">\r\n                <label style=\"font-size: 12px; display: flex; align-items: center;\">\r\n                    <input type=\"checkbox\" id=\"reduce-motion-toggle\" ${this.preferences.reduceMotion ? 'checked' : ''} style=\"margin-right: 8px;\">\r\n                    Reduce Motion\r\n                </label>\r\n            </div>\r\n            <div class=\"a11y-option\">\r\n                <label style=\"font-size: 12px; display: flex; align-items: center;\">\r\n                    <input type=\"checkbox\" id=\"focus-enhancement-toggle\" ${this.preferences.focusEnhancement ? 'checked' : ''} style=\"margin-right: 8px;\">\r\n                    Enhanced Focus\r\n                </label>\r\n            </div>\r\n            <div style=\"margin-top: 10px; padding-top: 8px; border-top: 1px solid rgba(255,255,255,0.2); font-size: 10px; color: rgba(255,255,255,0.7);\">\r\n                Press Alt+A to toggle\r\n            </div>\r\n        `;\r\n        \r\n        document.body.appendChild(controlsPanel);\r\n        this.controlsPanel = controlsPanel;\r\n        this.setupControlsEventListeners();\r\n        this.setupAccessibilityShortcuts();\r\n    }\r\n\r\n    setupAccessibilityShortcuts() {\r\n        // Alt+A tuş kombinasyonu ile accessibility panel'i aç/kapat\r\n        document.addEventListener('keydown', (e) => {\r\n            if (e.altKey && e.key.toLowerCase() === 'a') {\r\n                e.preventDefault();\r\n                this.toggleAccessibilityPanel();\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleAccessibilityPanel() {\r\n        if (this.controlsPanel.style.display === 'none' || !this.controlsPanel.style.display) {\r\n            this.controlsPanel.style.display = 'block';\r\n            this.announce('Accessibility controls opened. Press Alt+A to close.');\r\n        } else {\r\n            this.controlsPanel.style.display = 'none';\r\n            this.announce('Accessibility controls closed.');\r\n        }\r\n    }\r\n\r\n    setupControlsEventListeners() {\r\n        const closeBtn = document.getElementById('a11y-close');\r\n        const textScaleRange = document.getElementById('text-scale-range');\r\n        const textScaleValue = document.getElementById('text-scale-value');\r\n        const highContrastToggle = document.getElementById('high-contrast-toggle');\r\n        const reduceMotionToggle = document.getElementById('reduce-motion-toggle');\r\n        const focusEnhancementToggle = document.getElementById('focus-enhancement-toggle');\r\n\r\n        // Close button\r\n        closeBtn.addEventListener('click', () => {\r\n            this.toggleAccessibilityPanel();\r\n        });\r\n\r\n        textScaleRange.addEventListener('input', () => {\r\n            const scale = parseFloat(textScaleRange.value);\r\n            this.changeTextScale(scale);\r\n            textScaleValue.textContent = `${Math.round(scale * 100)}%`;\r\n        });\r\n\r\n        highContrastToggle.addEventListener('change', () => {\r\n            this.preferences.highContrast = highContrastToggle.checked;\r\n            document.body.classList.toggle('a11y-high-contrast', highContrastToggle.checked);\r\n            this.savePreferences();\r\n            this.announce(highContrastToggle.checked ? gettext('High contrast enabled') : gettext('High contrast disabled'));\r\n        });\r\n\r\n        reduceMotionToggle.addEventListener('change', () => {\r\n            this.preferences.reduceMotion = reduceMotionToggle.checked;\r\n            document.body.classList.toggle('reduce-motion', reduceMotionToggle.checked);\r\n            this.savePreferences();\r\n            this.announce(reduceMotionToggle.checked ? gettext('Reduced motion enabled') : gettext('Reduced motion disabled'));\r\n        });\r\n\r\n        focusEnhancementToggle.addEventListener('change', () => {\r\n            this.preferences.focusEnhancement = focusEnhancementToggle.checked;\r\n            document.body.classList.toggle('a11y-focus-enhanced', focusEnhancementToggle.checked);\r\n            this.savePreferences();\r\n            this.announce(focusEnhancementToggle.checked ? gettext('Focus enhancement enabled') : gettext('Focus enhancement disabled'));\r\n        });\r\n    }\r\n\r\n    // Accessibility Violation Detection\r\n    monitorAccessibilityViolations() {\r\n        if (!this.preferences.showViolationWarnings) return;\r\n\r\n        // Monitor for missing alt text\r\n        this.checkImages();\r\n        \r\n        // Monitor for missing form labels\r\n        this.checkFormLabels();\r\n        \r\n        // Monitor for heading hierarchy\r\n        this.checkHeadingHierarchy();\r\n        \r\n        // Monitor for color-only information\r\n        this.checkColorOnlyInformation();\r\n    }\r\n\r\n    checkImages() {\r\n        const images = document.querySelectorAll('img');\r\n        const violations = [];\r\n        \r\n        images.forEach(img => {\r\n            if (!img.getAttribute('alt') && !img.getAttribute('aria-label')) {\r\n                violations.push(img);\r\n            }\r\n        });\r\n        \r\n        if (violations.length > 0) {\r\n            console.group('Accessibility: Missing Alt Text');\r\n            violations.forEach(img => {\r\n                console.warn('Image missing alt text:', img);\r\n                // Auto-fix: add empty alt for decorative images\r\n                if (img.getAttribute('data-decorative') === 'true') {\r\n                    img.setAttribute('alt', '');\r\n                }\r\n            });\r\n            console.groupEnd();\r\n        }\r\n    }\r\n\r\n    checkFormLabels() {\r\n        const inputs = document.querySelectorAll('input, select, textarea');\r\n        const violations = [];\r\n        \r\n        inputs.forEach(input => {\r\n            if (input.type !== 'hidden' && \r\n                !input.getAttribute('aria-label') && \r\n                !input.getAttribute('aria-labelledby') &&\r\n                !document.querySelector(`label[for=\"${input.id}\"]`)) {\r\n                violations.push(input);\r\n            }\r\n        });\r\n        \r\n        if (violations.length > 0) {\r\n            console.group('Accessibility: Missing Form Labels');\r\n            violations.forEach(input => {\r\n                console.warn('Form input missing label:', input);\r\n            });\r\n            console.groupEnd();\r\n        }\r\n    }\r\n\r\n    checkHeadingHierarchy() {\r\n        const headings = Array.from(document.querySelectorAll('h1, h2, h3, h4, h5, h6'));\r\n        const violations = [];\r\n        \r\n        let lastLevel = 0;\r\n        headings.forEach(heading => {\r\n            const currentLevel = parseInt(heading.tagName.substring(1));\r\n            \r\n            if (currentLevel - lastLevel > 1) {\r\n                violations.push({\r\n                    element: heading,\r\n                    issue: `Heading level jumps from h${lastLevel} to h${currentLevel}`\r\n                });\r\n            }\r\n            \r\n            lastLevel = currentLevel;\r\n        });\r\n        \r\n        if (violations.length > 0) {\r\n            console.group('Accessibility: Heading Hierarchy Issues');\r\n            violations.forEach(violation => {\r\n                console.warn(violation.issue, violation.element);\r\n            });\r\n            console.groupEnd();\r\n        }\r\n    }\r\n\r\n    checkColorOnlyInformation() {\r\n        // This is a simplified check - in practice, you'd want more sophisticated detection\r\n        const colorOnlyElements = document.querySelectorAll('[style*=\"color:\"], .text-red, .text-green, .text-blue');\r\n        \r\n        colorOnlyElements.forEach(element => {\r\n            if (element.textContent.match(/error|warning|success|required/i)) {\r\n                if (!element.getAttribute('aria-label') && !element.querySelector('.sr-only')) {\r\n                    console.warn('Accessibility: Possible color-only information', element);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // Utility Methods\r\n    generateId(prefix = 'a11y') {\r\n        return `${prefix}-${Math.random().toString(36).substr(2, 9)}`;\r\n    }\r\n\r\n    closeActiveModals() {\r\n        const modals = document.querySelectorAll('[role=\"dialog\"]:not([aria-hidden=\"true\"])');\r\n        modals.forEach(modal => {\r\n            const closeBtn = modal.querySelector('.close, [aria-label*=\"close\"], [data-dismiss]');\r\n            if (closeBtn) {\r\n                closeBtn.click();\r\n            } else {\r\n                modal.setAttribute('aria-hidden', 'true');\r\n                this.popFocus();\r\n            }\r\n        });\r\n    }\r\n\r\n    // Preferences Management\r\n    loadPreferences() {\r\n        try {\r\n            const saved = localStorage.getItem('accessibilityPreferences');\r\n            return saved ? JSON.parse(saved) : {\r\n                textScale: 1,\r\n                highContrast: false,\r\n                reduceMotion: false,\r\n                focusEnhancement: false,\r\n                showViolationWarnings: true,\r\n                showContrastWarnings: false\r\n            };\r\n        } catch (e) {\r\n            return {\r\n                textScale: 1,\r\n                highContrast: false,\r\n                reduceMotion: false,\r\n                focusEnhancement: false,\r\n                showViolationWarnings: true,\r\n                showContrastWarnings: false\r\n            };\r\n        }\r\n    }\r\n\r\n    savePreferences() {\r\n        try {\r\n            localStorage.setItem('accessibilityPreferences', JSON.stringify(this.preferences));\r\n        } catch (e) {\r\n            console.warn('Unable to save accessibility preferences');\r\n        }\r\n    }\r\n\r\n    // Public API\r\n    enable() {\r\n        document.body.classList.add('accessibility-enabled');\r\n        this.announce('Accessibility features enabled');\r\n    }\r\n\r\n    disable() {\r\n        document.body.classList.remove('accessibility-enabled');\r\n        this.announce('Accessibility features disabled');\r\n    }\r\n\r\n    getViolations() {\r\n        // Return current accessibility violations\r\n        return {\r\n            images: this.checkImages(),\r\n            forms: this.checkFormLabels(),\r\n            headings: this.checkHeadingHierarchy(),\r\n            contrast: this.auditContrast()\r\n        };\r\n    }\r\n}\r\n\r\n// Initialize accessibility manager\r\nconst accessibilityManager = new AccessibilityManager();\r\n\r\n// Export for global access\r\nwindow.AccessibilityManager = accessibilityManager;\r\n\r\n// Auto-enable on DOM ready\r\nif (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n        accessibilityManager.enable();\r\n    });\r\n} else {\r\n    accessibilityManager.enable();\r\n}"],"mappings":"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","ignoreList":[]}