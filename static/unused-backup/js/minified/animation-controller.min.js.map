{"version":3,"file":"animation-controller.min.js","names":["AnimationController","constructor","options","this","threshold","rootMargin","animateOnce","enableParallax","respectReducedMotion","observers","animatedElements","Set","parallaxElements","reducedMotion","init","checkReducedMotion","initScrollAnimations","initParallaxAnimations","initStaggerAnimations","bindEvents","initPerformanceMonitoring","window","matchMedia","mediaQuery","matches","addEventListener","e","updateAnimationsForReducedMotion","localStorage","getItem","document","body","classList","add","disableHeavyAnimations","remove","enableAnimations","scrollRevealObserver","IntersectionObserver","entries","handleScrollReveal","querySelectorAll","forEach","element","contains","style","animationPlayState","observe","push","entry","isIntersecting","target","has","triggerAnimation","removeAttribute","animationDuration","getAnimationDuration","setTimeout","dispatchEvent","CustomEvent","detail","timestamp","performance","now","container","children","observer","triggerStaggerAnimation","unobserve","Array","from","child","index","opacity","transform","length","ticking","requestAnimationFrame","updateParallaxElements","passive","scrollTop","pageYOffset","windowHeight","innerHeight","rect","getBoundingClientRect","elementTop","top","height","bottom","speed","parseFloat","dataset","parallax","yPos","animationFrameCount","lastTime","monitorAnimations","currentTime","deltaTime","fps","Math","round","reduceAnimationQuality","restoreAnimationQuality","location","hostname","animation","duration","getComputedStyle","hidden","pauseAnimations","resumeAnimations","cleanup","ctrlKey","altKey","key","toggleReducedMotion","setItem","toString","animateElement","animationClass","delay","callback","createStaggeredAnimation","elements","staggerDelay","disconnect","clear","isElementInViewport","windowWidth","innerWidth","left","right","waitForAnimation","Promise","resolve","handleAnimationEnd","removeEventListener","animationController","documentElement","module","exports"],"sources":["0"],"sourcesContent":["/**\r\n * ANIMATION CONTROLLER\r\n * Intersection Observer based animations with performance optimization\r\n */\r\n\r\nclass AnimationController {\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      threshold: 0.1,\r\n      rootMargin: '50px 0px',\r\n      animateOnce: true,\r\n      enableParallax: true,\r\n      respectReducedMotion: true,\r\n      ...options\r\n    };\r\n    \r\n    this.observers = [];\r\n    this.animatedElements = new Set();\r\n    this.parallaxElements = [];\r\n    this.reducedMotion = false;\r\n    \r\n    this.init();\r\n  }\r\n  \r\n  init() {\r\n    console.log('ðŸŽ¬ Animation Controller initialized');\r\n    \r\n    // Check for reduced motion preference\r\n    this.checkReducedMotion();\r\n    \r\n    // Initialize intersection observers\r\n    this.initScrollAnimations();\r\n    this.initParallaxAnimations();\r\n    this.initStaggerAnimations();\r\n    \r\n    // Bind events\r\n    this.bindEvents();\r\n    \r\n    // Performance monitoring\r\n    this.initPerformanceMonitoring();\r\n  }\r\n  \r\n  checkReducedMotion() {\r\n    if (window.matchMedia) {\r\n      const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\r\n      this.reducedMotion = mediaQuery.matches;\r\n      \r\n      // Listen for changes\r\n      mediaQuery.addEventListener('change', (e) => {\r\n        this.reducedMotion = e.matches;\r\n        this.updateAnimationsForReducedMotion();\r\n      });\r\n    }\r\n    \r\n    // Also check localStorage override\r\n    if (localStorage.getItem('reduced-motion') === 'true') {\r\n      this.reducedMotion = true;\r\n    }\r\n  }\r\n  \r\n  updateAnimationsForReducedMotion() {\r\n    if (this.reducedMotion) {\r\n      document.body.classList.add('reduced-motion');\r\n      this.disableHeavyAnimations();\r\n    } else {\r\n      document.body.classList.remove('reduced-motion');\r\n      this.enableAnimations();\r\n    }\r\n  }\r\n  \r\n  initScrollAnimations() {\r\n    // Scroll reveal animations\r\n    const scrollRevealObserver = new IntersectionObserver(\r\n      (entries) => this.handleScrollReveal(entries),\r\n      {\r\n        threshold: this.options.threshold,\r\n        rootMargin: this.options.rootMargin\r\n      }\r\n    );\r\n    \r\n    // Observe elements with scroll animation classes\r\n    const scrollElements = document.querySelectorAll(`\r\n      .scroll-reveal,\r\n      .scroll-scale,\r\n      .animate-fade-in,\r\n      .animate-fade-in-up,\r\n      .animate-fade-in-down,\r\n      .animate-fade-in-left,\r\n      .animate-fade-in-right,\r\n      .animate-scale-in,\r\n      .animate-slide-up,\r\n      .animate-slide-down,\r\n      .animate-bounce-in\r\n    `);\r\n    \r\n    scrollElements.forEach(element => {\r\n      // Add initial hidden state\r\n      if (!element.classList.contains('revealed')) {\r\n        element.style.animationPlayState = 'paused';\r\n      }\r\n      \r\n      scrollRevealObserver.observe(element);\r\n    });\r\n    \r\n    this.observers.push(scrollRevealObserver);\r\n  }\r\n  \r\n  handleScrollReveal(entries) {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        const element = entry.target;\r\n        \r\n        // Prevent re-animation if animateOnce is enabled\r\n        if (this.options.animateOnce && this.animatedElements.has(element)) {\r\n          return;\r\n        }\r\n        \r\n        // Trigger animation\r\n        this.triggerAnimation(element);\r\n        this.animatedElements.add(element);\r\n        \r\n        // Unobserve if animateOnce is enabled\r\n        if (this.options.animateOnce) {\r\n          entry.target.removeAttribute('data-animate-on-scroll');\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n  triggerAnimation(element) {\r\n    // Don't animate if reduced motion is preferred\r\n    if (this.reducedMotion && this.options.respectReducedMotion) {\r\n      element.classList.add('revealed');\r\n      return;\r\n    }\r\n    \r\n    // Add revealed class for CSS animations\r\n    element.classList.add('revealed');\r\n    \r\n    // Start CSS animation if paused\r\n    if (element.style.animationPlayState === 'paused') {\r\n      element.style.animationPlayState = 'running';\r\n    }\r\n    \r\n    // Add will-change for performance\r\n    element.classList.add('will-animate');\r\n    \r\n    // Clean up will-change after animation\r\n    const animationDuration = this.getAnimationDuration(element);\r\n    setTimeout(() => {\r\n      element.classList.remove('will-animate');\r\n      element.classList.add('will-animate-complete');\r\n    }, animationDuration);\r\n    \r\n    // Trigger custom event\r\n    element.dispatchEvent(new CustomEvent('animation-start', {\r\n      detail: { element, timestamp: performance.now() }\r\n    }));\r\n  }\r\n  \r\n  initStaggerAnimations() {\r\n    const staggerContainers = document.querySelectorAll('.animate-stagger');\r\n    \r\n    staggerContainers.forEach(container => {\r\n      const children = container.children;\r\n      const observer = new IntersectionObserver(\r\n        (entries) => {\r\n          entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n              this.triggerStaggerAnimation(container);\r\n              observer.unobserve(entry.target);\r\n            }\r\n          });\r\n        },\r\n        {\r\n          threshold: 0.2,\r\n          rootMargin: '0px 0px -50px 0px'\r\n        }\r\n      );\r\n      \r\n      observer.observe(container);\r\n      this.observers.push(observer);\r\n    });\r\n  }\r\n  \r\n  triggerStaggerAnimation(container) {\r\n    const children = Array.from(container.children);\r\n    const staggerDelay = 100; // ms between each item\r\n    \r\n    children.forEach((child, index) => {\r\n      setTimeout(() => {\r\n        if (!this.reducedMotion) {\r\n          child.classList.add('revealed');\r\n          child.style.animationPlayState = 'running';\r\n        } else {\r\n          // Instant reveal for reduced motion\r\n          child.style.opacity = '1';\r\n          child.style.transform = 'none';\r\n        }\r\n      }, index * staggerDelay);\r\n    });\r\n  }\r\n  \r\n  initParallaxAnimations() {\r\n    if (!this.options.enableParallax || this.reducedMotion) {\r\n      return;\r\n    }\r\n    \r\n    // Find parallax elements\r\n    this.parallaxElements = Array.from(document.querySelectorAll('[data-parallax]'));\r\n    \r\n    if (this.parallaxElements.length === 0) return;\r\n    \r\n    // Throttled scroll handler for performance\r\n    let ticking = false;\r\n    const updateParallax = () => {\r\n      if (!ticking) {\r\n        requestAnimationFrame(() => {\r\n          this.updateParallaxElements();\r\n          ticking = false;\r\n        });\r\n        ticking = true;\r\n      }\r\n    };\r\n    \r\n    // Use passive event listener for better performance\r\n    window.addEventListener('scroll', updateParallax, { passive: true });\r\n  }\r\n  \r\n  updateParallaxElements() {\r\n    const scrollTop = window.pageYOffset;\r\n    const windowHeight = window.innerHeight;\r\n    \r\n    this.parallaxElements.forEach(element => {\r\n      const rect = element.getBoundingClientRect();\r\n      const elementTop = rect.top + scrollTop;\r\n      const elementHeight = rect.height;\r\n      \r\n      // Only update if element is in viewport\r\n      if (rect.bottom >= 0 && rect.top <= windowHeight) {\r\n        const speed = parseFloat(element.dataset.parallax) || 0.5;\r\n        const yPos = -(scrollTop - elementTop) * speed;\r\n        \r\n        // Use transform3d for better performance\r\n        element.style.transform = `translate3d(0, ${yPos}px, 0)`;\r\n      }\r\n    });\r\n  }\r\n  \r\n  initPerformanceMonitoring() {\r\n    // Monitor animation performance\r\n    let animationFrameCount = 0;\r\n    let lastTime = performance.now();\r\n    \r\n    const monitorAnimations = () => {\r\n      const currentTime = performance.now();\r\n      const deltaTime = currentTime - lastTime;\r\n      \r\n      animationFrameCount++;\r\n      \r\n      // Check FPS every second\r\n      if (animationFrameCount >= 60) {\r\n        const fps = Math.round(1000 / (deltaTime / animationFrameCount));\r\n        \r\n        // Reduce animation quality if FPS drops\r\n        if (fps < 50) {\r\n          this.reduceAnimationQuality();\r\n        } else if (fps > 55) {\r\n          this.restoreAnimationQuality();\r\n        }\r\n        \r\n        animationFrameCount = 0;\r\n        lastTime = currentTime;\r\n      }\r\n      \r\n      requestAnimationFrame(monitorAnimations);\r\n    };\r\n    \r\n    // Start monitoring only in development\r\n    if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\r\n      requestAnimationFrame(monitorAnimations);\r\n    }\r\n  }\r\n  \r\n  reduceAnimationQuality() {\r\n    console.warn('ðŸŽ¬ Reducing animation quality due to low FPS');\r\n    document.body.classList.add('low-performance');\r\n    \r\n    // Disable heavy animations\r\n    this.disableHeavyAnimations();\r\n  }\r\n  \r\n  restoreAnimationQuality() {\r\n    if (document.body.classList.contains('low-performance')) {\r\n      console.log('ðŸŽ¬ Restoring animation quality');\r\n      document.body.classList.remove('low-performance');\r\n      \r\n      if (!this.reducedMotion) {\r\n        this.enableAnimations();\r\n      }\r\n    }\r\n  }\r\n  \r\n  disableHeavyAnimations() {\r\n    const heavyAnimations = document.querySelectorAll(`\r\n      .animate-pulse-subtle,\r\n      .animate-breathe,\r\n      .parallax-layer,\r\n      [data-parallax]\r\n    `);\r\n    \r\n    heavyAnimations.forEach(element => {\r\n      element.style.animation = 'none';\r\n      element.style.transform = 'none';\r\n    });\r\n  }\r\n  \r\n  enableAnimations() {\r\n    const heavyAnimations = document.querySelectorAll(`\r\n      .animate-pulse-subtle,\r\n      .animate-breathe,\r\n      .parallax-layer,\r\n      [data-parallax]\r\n    `);\r\n    \r\n    heavyAnimations.forEach(element => {\r\n      element.style.animation = '';\r\n      element.style.transform = '';\r\n    });\r\n  }\r\n  \r\n  getAnimationDuration(element) {\r\n    const computedStyle = getComputedStyle(element);\r\n    const duration = computedStyle.animationDuration;\r\n    \r\n    if (duration === '0s') return 300; // Default fallback\r\n    \r\n    return parseFloat(duration) * 1000; // Convert to ms\r\n  }\r\n  \r\n  bindEvents() {\r\n    // Handle visibility change to pause/resume animations\r\n    document.addEventListener('visibilitychange', () => {\r\n      if (document.hidden) {\r\n        this.pauseAnimations();\r\n      } else {\r\n        this.resumeAnimations();\r\n      }\r\n    });\r\n    \r\n    // Handle page unload\r\n    window.addEventListener('beforeunload', () => {\r\n      this.cleanup();\r\n    });\r\n    \r\n    // Handle reduced motion toggle\r\n    document.addEventListener('keydown', (e) => {\r\n      // Toggle reduced motion with Ctrl+Alt+M\r\n      if (e.ctrlKey && e.altKey && e.key === 'm') {\r\n        this.toggleReducedMotion();\r\n      }\r\n    });\r\n  }\r\n  \r\n  pauseAnimations() {\r\n    const animatedElements = document.querySelectorAll('[class*=\"animate-\"]');\r\n    animatedElements.forEach(element => {\r\n      element.style.animationPlayState = 'paused';\r\n    });\r\n  }\r\n  \r\n  resumeAnimations() {\r\n    if (!this.reducedMotion) {\r\n      const animatedElements = document.querySelectorAll('[class*=\"animate-\"]');\r\n      animatedElements.forEach(element => {\r\n        element.style.animationPlayState = 'running';\r\n      });\r\n    }\r\n  }\r\n  \r\n  toggleReducedMotion() {\r\n    this.reducedMotion = !this.reducedMotion;\r\n    localStorage.setItem('reduced-motion', this.reducedMotion.toString());\r\n    this.updateAnimationsForReducedMotion();\r\n    \r\n    console.log(`ðŸŽ¬ Reduced motion ${this.reducedMotion ? 'enabled' : 'disabled'}`);\r\n  }\r\n  \r\n  // Public API methods\r\n  animateElement(element, animationClass, options = {}) {\r\n    const {\r\n      delay = 0,\r\n      duration = null,\r\n      callback = null\r\n    } = options;\r\n    \r\n    setTimeout(() => {\r\n      if (duration) {\r\n        element.style.animationDuration = `${duration}ms`;\r\n      }\r\n      \r\n      element.classList.add(animationClass);\r\n      \r\n      if (callback) {\r\n        const animationDuration = duration || this.getAnimationDuration(element);\r\n        setTimeout(callback, animationDuration);\r\n      }\r\n    }, delay);\r\n  }\r\n  \r\n  createStaggeredAnimation(elements, animationClass, staggerDelay = 100) {\r\n    elements.forEach((element, index) => {\r\n      this.animateElement(element, animationClass, {\r\n        delay: index * staggerDelay\r\n      });\r\n    });\r\n  }\r\n  \r\n  cleanup() {\r\n    // Disconnect all observers\r\n    this.observers.forEach(observer => observer.disconnect());\r\n    this.observers = [];\r\n    \r\n    // Clear performance monitoring\r\n    this.animatedElements.clear();\r\n    this.parallaxElements = [];\r\n  }\r\n  \r\n  // Utility methods\r\n  static isElementInViewport(element, threshold = 0) {\r\n    const rect = element.getBoundingClientRect();\r\n    const windowHeight = window.innerHeight;\r\n    const windowWidth = window.innerWidth;\r\n    \r\n    return (\r\n      rect.top >= -threshold &&\r\n      rect.left >= -threshold &&\r\n      rect.bottom <= windowHeight + threshold &&\r\n      rect.right <= windowWidth + threshold\r\n    );\r\n  }\r\n  \r\n  static waitForAnimation(element) {\r\n    return new Promise(resolve => {\r\n      const handleAnimationEnd = () => {\r\n        element.removeEventListener('animationend', handleAnimationEnd);\r\n        resolve();\r\n      };\r\n      \r\n      element.addEventListener('animationend', handleAnimationEnd);\r\n    });\r\n  }\r\n}\r\n\r\n// Auto-initialize when DOM is ready\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  window.animationController = new AnimationController();\r\n  \r\n  // Add global CSS class for JavaScript availability\r\n  document.documentElement.classList.add('js-animations-available');\r\n});\r\n\r\n// Export for module systems\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = AnimationController;\r\n}\r\n\r\n// Export class globally\r\nwindow.AnimationController = AnimationController;"],"mappings":"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","ignoreList":[]}