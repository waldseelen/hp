# Generated by Django 5.1 on 2025-09-16 16:19

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0015_rename_main_person_is_visi_377110_idx_personal_vis_order_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='admin',
            name='account_locked_until',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='admin',
            name='backup_codes',
            field=models.JSONField(blank=True, default=list, help_text='Backup recovery codes'),
        ),
        migrations.AddField(
            model_name='admin',
            name='failed_login_attempts',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='admin',
            name='is_2fa_enabled',
            field=models.BooleanField(default=False, help_text='Whether 2FA is enabled'),
        ),
        migrations.AddField(
            model_name='admin',
            name='last_failed_login',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='admin',
            name='totp_secret',
            field=models.CharField(blank=True, help_text='TOTP secret key', max_length=32),
        ),
        migrations.CreateModel(
            name='CookieConsent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(db_index=True, max_length=40)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('necessary', models.BooleanField(default=True, help_text='Required cookies, always enabled')),
                ('functional', models.BooleanField(default=False, help_text='Functional cookies for enhanced experience')),
                ('analytics', models.BooleanField(default=False, help_text='Analytics cookies for site improvement')),
                ('marketing', models.BooleanField(default=False, help_text='Marketing cookies for personalized ads')),
                ('consent_given_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(help_text='When this consent expires')),
            ],
            options={
                'ordering': ['-consent_given_at'],
                'indexes': [models.Index(fields=['session_key'], name='main_cookie_session_1988f5_idx'), models.Index(fields=['ip_address'], name='main_cookie_ip_addr_f463b4_idx'), models.Index(fields=['-consent_given_at'], name='main_cookie_consent_b5fa50_idx'), models.Index(fields=['expires_at'], name='main_cookie_expires_7bf150_idx')],
            },
        ),
        migrations.CreateModel(
            name='AccountDeletionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text="User's email for confirmation", max_length=254)),
                ('reason', models.TextField(blank=True, help_text='Optional reason for deletion')),
                ('confirmation_token', models.CharField(max_length=100, unique=True)),
                ('request_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('scheduled_deletion', models.DateTimeField(help_text='When account will be deleted')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('processing', 'Processing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('user_data_backup', models.JSONField(default=dict, help_text='Backup of user data before deletion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deletion_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-request_date'],
                'indexes': [models.Index(fields=['user', 'status'], name='main_accoun_user_id_96ec31_idx'), models.Index(fields=['confirmation_token'], name='main_accoun_confirm_e18592_idx'), models.Index(fields=['scheduled_deletion'], name='main_accoun_schedul_ae5f00_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataExportRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email where export will be sent', max_length=254)),
                ('request_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('file_path', models.CharField(blank=True, help_text='Path to generated export file', max_length=500)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='export_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-request_date'],
                'indexes': [models.Index(fields=['user', 'status'], name='main_dataex_user_id_5b6f57_idx'), models.Index(fields=['-request_date'], name='main_dataex_request_d4d9fc_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_activity'],
                'indexes': [models.Index(fields=['user', 'is_active'], name='main_userse_user_id_649c30_idx'), models.Index(fields=['session_key'], name='main_userse_session_e2d65c_idx'), models.Index(fields=['-last_activity'], name='main_userse_last_ac_d43d86_idx')],
            },
        ),
    ]
